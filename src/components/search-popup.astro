 <!-- Search Modal (Top-Aligned) -->
  <div id="searchModal" class="fixed inset-0 bg-black/10 backdrop-blur-sm hidden z-50 flex items-start justify-center pt-10 px-7">
    <div class="bg-white w-full max-w-md rounded-xl shadow-lg relative">

      <!-- Search Input Group -->
      <div class="relative">
        <input 
          type="text" 
          id="searchInput" 
          placeholder="Type a font name..." 
          class="w-full px-4 pr-10 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
          autocomplete="off"
        />
        <!-- Clear button (X) -->
        <button 
          id="clearBtn" 
          class="absolute right-2 top-2.5 text-gray-400 hover:text-gray-600 focus:outline-none hidden"
        >
          âœ•
        </button>
      </div>

      <!-- Search Results -->
      <div 
        id="results" 
        class="mt-2 max-h-60 overflow-y-auto bg-white border border-gray-200 rounded-lg shadow hidden absolute w-full z-20"
      ></div>

    </div>
  </div>


<script is:inline>
    const openSearch = document.getElementById('openSearch');
    const searchModal = document.getElementById('searchModal');
    const searchInput = document.getElementById('searchInput');
    const resultsContainer = document.getElementById('results');
    const clearBtn = document.getElementById('clearBtn');
    let fonts = [];

    // Fetch font data
    fetch('https://cdn.jsdelivr.net/gh/fuadhasanshihab/bangla-web-fonts@main/src/collections/fonts.json')
      .then(res => res.json())
      .then(data => fonts = data);

    // Show filtered or all results
    function displayResults(fontArray, query) {
      resultsContainer.innerHTML = '';
      resultsContainer.classList.remove('hidden');

      if (fontArray.length > 0) {
        fontArray.forEach(font => {
          const div = document.createElement('div');
          div.className = 'px-4 py-2 cursor-pointer hover:bg-gray-100 text-gray-800';

          const regex = new RegExp(`(${query})`, 'gi');
          const highlighted = font.FontName.replace(regex, match => `<span class="font-bold text-blue-600">${match}</span>`);
          div.innerHTML = highlighted;

          div.onclick = () => {
            window.location.href = `https://banglawebfonts.pages.dev/${font.FontPath}`;
          };

          resultsContainer.appendChild(div);
        });
      } else if (query.trim()) {
        const noMatch = document.createElement('div');
        noMatch.className = 'px-4 py-2 text-gray-500 italic';
        noMatch.textContent = `No results found for "${query}"`;
        resultsContainer.appendChild(noMatch);
      } else {
        resultsContainer.classList.add('hidden');
      }
    }

    // Input logic
    searchInput.addEventListener('input', () => {
      const query = searchInput.value.toLowerCase();
      clearBtn.classList.toggle('hidden', query.length === 0);
      if (query.length === 0) {
        displayResults(fonts, '');
      } else {
        const filtered = fonts.filter(font =>
          font.FontName.toLowerCase().includes(query)
        );
        displayResults(filtered, searchInput.value);
      }
    });

    // Show results on focus
    searchInput.addEventListener('focus', () => {
      if (searchInput.value.trim() === '') {
        displayResults(fonts, '');
      }
    });

    // Clear input
    clearBtn.addEventListener('click', () => {
      searchInput.value = '';
      clearBtn.classList.add('hidden');
      displayResults(fonts, '');
      searchInput.focus();
    });

    // Open modal
openSearch.addEventListener('click', () => {
  searchModal.classList.remove('hidden');
  document.body.classList.add('overflow-hidden'); // prevent body scroll
  setTimeout(() => searchInput.focus(), 100);
});

// Close modal if clicked on background
searchModal.addEventListener('click', (e) => {
  if (e.target === searchModal) {
    searchModal.classList.add('hidden');
    resultsContainer.classList.add('hidden');
    document.body.classList.remove('overflow-hidden'); // restore body scroll
  }
});

// Close modal on ESC
document.addEventListener('keydown', (e) => {
  if (e.key === 'Escape') {
    searchModal.classList.add('hidden');
    resultsContainer.classList.add('hidden');
    document.body.classList.remove('overflow-hidden');
  }
});

  </script>
